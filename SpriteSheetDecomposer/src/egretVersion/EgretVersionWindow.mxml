<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				width="1000" height="600" close="titlewindow1_closeHandler(event)"
				creationComplete="titlewindow1_creationCompleteHandler(event)" fontSize="12"
				layout="absolute" showCloseButton="true">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import nodep.util.FileUtil;
			
			private var _box:UIComponent;
			
			private var _oldProject:File;
			private var _newProject:File;
			
			protected function titlewindow1_closeHandler(event:CloseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				FileUtil.choosePath(pathSelected,"选择参照项目","old");
				this._box = new UIComponent();
				this._box.x = 0;
				this._box.y = 0;
				this.addChild(this._box);
			}
			
			//路径选择后
			private function pathSelected(file:File,optKey:String=null):void{
				switch(optKey){
					case "old":
						_oldProject = file;
						FileUtil.choosePath(pathSelected,"选择发布项目","new");
						break;
					case "new":
						_newProject = file;
						startComper();
						break;
				}
			}
			
			private function startComper():void{
				var version:String = "";
				var date:Date = new Date();
				version = date.fullYear+""+(date.month+1)+""+date.date+""+date.hours+""+date.minutes;
				trace("最新的版本号为"+version);
				//1.修改Main中的版本号
				var mainStr:String = FileUtil.getStr(_newProject.nativePath+"/main.min.js");
				if(FileUtil.isDifferent(_newProject.nativePath+"/resource/default.res.json",_oldProject.nativePath+"/resource/default.res.json")){
					mainStr = mainStr.replace(/{resVer}/g,version);
				}
				if(FileUtil.isDifferent(_newProject.nativePath+"/resource/default.thm.json",_oldProject.nativePath+"/resource/default.thm.json")){
					mainStr = mainStr.replace(/{thmVer}/g,version);
				}
				FileUtil.saveStr(_newProject.nativePath+"/main.min.js",mainStr);
				//2.加载资源列表配置文件
				var resConfigUrl:String = _newProject.nativePath+"/"+"resource/default.res.json";
				var configStr:String = FileUtil.getStr(resConfigUrl);
				var configObj:Object = JSON.parse(configStr);
				var resList:Array = configObj["resources"];
				for each(var resObjc:Object in resList){
					var newResUrl:String = _newProject.nativePath+"/resource/"+resObjc.url;
					var oldResUrl:String = _oldProject.nativePath+"/resource/"+resObjc.url;
					if(FileUtil.isDifferent(newResUrl,oldResUrl)){
						var oUrl:String = resObjc.url;
						if(oUrl.indexOf("?v")>=0)
							oUrl = oUrl.split("?v")[0];
						resObjc.url = oUrl+"?v="+version;
						trace("resUrl->"+resObjc.url);
					}
				}
				configStr = JSON.stringify(configObj);
				FileUtil.saveStr(resConfigUrl,configStr);
				//3.修改mainifest配置文件版本
				var mainifestUrl:String = _newProject.nativePath+"/manifest.json";
				var mainJson:String = FileUtil.getStr(mainifestUrl);
				var mainObj:Object = JSON.parse(mainJson);
				var lib:Array = mainObj["initial"];
				//检查mainifest中的lib库是否有变化
				for(var i:int=0;i<lib.length;i++){
					var libStr:String = lib[i];
					var newlib:String = _newProject.nativePath+"/"+libStr;
					var oldlib:String = _oldProject.nativePath+"/"+libStr;
					if(FileUtil.isDifferent(newlib,oldlib)){
						if(libStr.indexOf("?v")>=0)
							libStr = libStr.split("?v")[0];
						libStr = libStr+"?v="+version;
						lib[i] = libStr;
						trace("mainifest_lib->"+libStr);
					}
				}
				//检查mainifest中的game
				var games:Array = mainObj["game"];
				for(i=0;i<games.length;i++){
					var gms:String = games[i];
					var newFile:String = _newProject.nativePath+"/"+gms;
					var oldFile:String = _oldProject.nativePath+"/"+gms;
					if(FileUtil.isDifferent(newFile,oldFile)){
						if(gms.indexOf("?v")>=0)
							gms = gms.split("?v")[0];
						gms = gms+"?v="+version;
						games[i] = gms;
						trace("mainifest_game->"+gms);
					}
				}
				mainJson = JSON.stringify(mainObj);
				FileUtil.saveStr(mainifestUrl,mainJson);
				trace("版本发布完成");
			}
		]]>
	</fx:Script>
</mx:TitleWindow>
